opam-version: "2.0"
compiler: [
  "base-bigarray.base"
  "base-threads.base"
  "base-unix.base"
  "ocaml.4.06.1"
  "ocaml-config.1"
  "ocaml-system.4.06.1"
]
roots: ["ocaml-helloworld.0.0.1" "ocaml-system.4.06.1"]
installed: [
  "base-bigarray.base"
  "base-bytes.base"
  "base-threads.base"
  "base-unix.base"
  "biniou.1.2.0"
  "camomile.1.0.1"
  "cmdliner.1.0.3"
  "conf-m4.1"
  "conf-which.1"
  "cppo.1.6.5"
  "dune.1.6.2"
  "easy-format.1.3.1"
  "jbuilder.transition"
  "lambda-term.1.13"
  "lwt.4.1.0"
  "lwt_log.1.1.0"
  "lwt_react.1.1.1"
  "merlin.3.2.2"
  "ocaml.4.06.1"
  "ocaml-config.1"
  "ocaml-helloworld.0.0.1"
  "ocaml-system.4.06.1"
  "ocamlbuild.0.12.0"
  "ocamlfind.1.8.0"
  "ocp-indent.1.7.0"
  "react.1.2.1"
  "result.1.3"
  "topkg.1.0.0"
  "utop.2.2.0"
  "yojson.1.4.1"
  "zed.1.6"
]
pinned: "ocaml-helloworld.0.0.1"
package "base-bigarray" {
  opam-version: "2.0"
  version: "base"
  synopsis: ""
  description: "Bigarray library distributed with the OCaml compiler"
  maintainer: "https://github.com/ocaml/opam-repository/issues"
}
package "base-bytes" {
  opam-version: "2.0"
  version: "base"
  synopsis: "Bytes library distributed with the OCaml compiler"
  maintainer: " "
  authors: " "
  homepage: " "
  depends: [
    "ocaml" {>= "4.02.0"}
    "ocamlfind" {>= "1.5.3"}
  ]
}
package "base-threads" {
  opam-version: "2.0"
  version: "base"
  synopsis: ""
  description: "Threads library distributed with the OCaml compiler"
  maintainer: "https://github.com/ocaml/opam-repository/issues"
}
package "base-unix" {
  opam-version: "2.0"
  version: "base"
  synopsis: ""
  description: "Unix library distributed with the OCaml compiler"
  maintainer: "https://github.com/ocaml/opam-repository/issues"
}
package "biniou" {
  opam-version: "2.0"
  version: "1.2.0"
  synopsis:
    "Binary data format designed for speed, safety, ease of use and backward compatibility as protocols evolve"
  maintainer: "martin@mjambon.com"
  authors: "Martin Jambon"
  license: "BSD-3-Clause"
  homepage: "https://github.com/mjambon/biniou"
  bug-reports: "https://github.com/mjambon/biniou/issues"
  depends: [
    "ocaml" {>= "4.02.3"}
    "conf-which" {build}
    "jbuilder" {build & >= "1.0+beta7"}
    "easy-format"
  ]
  build: [
    ["jbuilder" "build" "-p" name "-j" jobs]
    ["jbuilder" "runtest" "-p" name] {with-test}
  ]
  dev-repo: "git+https://github.com/mjambon/biniou.git"
  url {
    src: "https://github.com/mjambon/biniou/archive/v1.2.0.tar.gz"
    checksum: "md5=f3e92358e832ed94eaf23ce622ccc2f9"
  }
}
package "camomile" {
  opam-version: "2.0"
  version: "1.0.1"
  synopsis: "A Unicode library"
  description: """
Camomile is a Unicode library for OCaml. Camomile provides Unicode character
type, UTF-8, UTF-16, UTF-32 strings, conversion to/from about 200 encodings,
collation and locale-sensitive case mappings, and more. The library is currently
designed for Unicode Standard 3.2."""
  maintainer: "yoriyuki.y@gmail.com"
  authors: "Yoriyuki Yamagata"
  license: "LGPL-2+ with OCaml linking exception"
  homepage: "https://github.com/yoriyuki/Camomile/wiki"
  bug-reports: "https://github.com/yoriyuki/Camomile/issues"
  depends: [
    "ocaml" {>= "4.02.3"}
    "jbuilder" {build & >= "1.0+beta17"}
  ]
  build: [
    ["ocaml" "configure.ml" "--share" "%{share}%/camomile"]
    ["jbuilder" "subst" "-p" name] {pinned}
    ["jbuilder" "build" "-p" name "-j" jobs]
  ]
  dev-repo: "git+https://github.com/yoriyuki/Camomile.git"
  url {
    src:
      "https://github.com/yoriyuki/Camomile/releases/download/1.0.1/camomile-1.0.1.tbz"
    checksum: "md5=82e016653431353a07f22c259adc6e05"
  }
}
package "cmdliner" {
  opam-version: "2.0"
  version: "1.0.3"
  synopsis: "Declarative definition of command line interfaces for OCaml"
  description: """
Cmdliner allows the declarative definition of command line interfaces
for OCaml.

It provides a simple and compositional mechanism to convert command
line arguments to OCaml values and pass them to your functions. The
module automatically handles syntax errors, help messages and UNIX man
page generation. It supports programs with single or multiple commands
and respects most of the [POSIX][1] and [GNU][2] conventions.

Cmdliner has no dependencies and is distributed under the ISC license.

[1]: http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap12.html
[2]: http://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html"""
  maintainer: "Daniel Bünzli <daniel.buenzl i@erratique.ch>"
  authors: "Daniel Bünzli <daniel.buenzl i@erratique.ch>"
  license: "ISC"
  tags: ["cli" "system" "declarative" "org:erratique"]
  homepage: "http://erratique.ch/software/cmdliner"
  doc: "http://erratique.ch/software/cmdliner/doc/Cmdliner"
  bug-reports: "https://github.com/dbuenzli/cmdliner/issues"
  depends: [
    "ocaml" {>= "4.03.0"}
  ]
  build: [make "all" "PREFIX=%{prefix}%"]
  install: [
    [make "install" "LIBDIR=%{_:lib}%" "DOCDIR=%{_:doc}%"]
    [make "install-doc" "LIBDIR=%{_:lib}%" "DOCDIR=%{_:doc}%"]
  ]
  dev-repo: "git+http://erratique.ch/repos/cmdliner.git"
  url {
    src: "http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.3.tbz"
    checksum: "md5=3674ad01d4445424105d33818c78fba8"
  }
}
package "conf-m4" {
  opam-version: "2.0"
  version: "1"
  synopsis: "Virtual package relying on m4"
  description:
    "This package can only install if the m4 binary is installed on the system."
  maintainer: "tim@gfxmonk.net"
  authors: "GNU Project"
  license: "GPL-3"
  homepage: "http://www.gnu.org/software/m4/m4.html"
  bug-reports: "https://github.com/ocaml/opam-repository/issues"
  flags: conf
  build: ["sh" "-exc" "echo | m4"]
  depexts: [
    ["m4"] {os-distribution = "debian"}
    ["m4"] {os-distribution = "ubuntu"}
    ["m4"] {os-distribution = "fedora"}
    ["m4"] {os-distribution = "rhel"}
    ["m4"] {os-distribution = "centos"}
    ["m4"] {os-distribution = "alpine"}
    ["m4"] {os-distribution = "nixos"}
    ["m4"] {os-family = "suse"}
    ["m4"] {os-distribution = "oraclelinux"}
    ["m4"] {os-distribution = "archlinux"}
  ]
}
package "conf-which" {
  opam-version: "2.0"
  version: "1"
  synopsis: "Virtual package relying on which"
  description:
    "This package can only install if the which program is installed on the system."
  maintainer: "unixjunkie@sdf.org"
  authors: "Carlo Wood"
  license: "GPL-2+"
  homepage: "http://www.gnu.org/software/which/"
  bug-reports: "https://github.com/ocaml/opam-repository/issues"
  flags: conf
  build: ["which" "which"]
  depexts: [
    ["which"] {os-distribution = "centos"}
    ["which"] {os-distribution = "fedora"}
    ["which"] {os-family = "suse"}
    ["debianutils"] {os-distribution = "debian"}
    ["debianutils"] {os-distribution = "ubuntu"}
    ["which"] {os-distribution = "nixos"}
    ["which"] {os-distribution = "archlinux"}
  ]
}
package "cppo" {
  opam-version: "2.0"
  version: "1.6.5"
  synopsis: "Equivalent of the C preprocessor for OCaml programs"
  maintainer: "martin@mjambon.com"
  authors: "Martin Jambon"
  license: "BSD-3-Clause"
  homepage: "https://github.com/mjambon/cppo"
  bug-reports: "https://github.com/mjambon/cppo/issues"
  depends: [
    "ocaml"
    "jbuilder" {build & >= "1.0+beta17"}
    "base-unix"
  ]
  build: [
    ["jbuilder" "subst" "-p" name] {pinned}
    ["jbuilder" "build" "-p" name "-j" jobs]
    ["jbuilder" "runtest" "-p" name] {with-test}
  ]
  dev-repo: "git+https://github.com/mjambon/cppo.git"
  url {
    src: "https://github.com/mjambon/cppo/archive/v1.6.5.tar.gz"
    checksum: "md5=1cd25741d31417995b0973fe0b6f6c82"
  }
}
package "dune" {
  opam-version: "2.0"
  version: "1.6.2"
  synopsis: "Fast, portable and opinionated build system"
  description: """
dune is a build system that was designed to simplify the release of
Jane Street packages. It reads metadata from "dune" files following a
very simple s-expression syntax.

dune is fast, it has very low-overhead and support parallel builds on
all platforms. It has no system dependencies, all you need to build
dune and packages using dune is OCaml. You don't need or make or bash
as long as the packages themselves don't use bash explicitly.

dune supports multi-package development by simply dropping multiple
repositories into the same directory.

It also supports multi-context builds, such as building against
several opam roots/switches simultaneously. This helps maintaining
packages across several versions of OCaml and gives cross-compilation
for free."""
  maintainer: "opensource@janestreet.com"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: [
    "ocaml" {>= "4.02"}
    "base-unix"
    "base-threads"
  ]
  conflicts: [
    "jbuilder" {!= "transition"}
    "odoc" {< "1.3.0"}
  ]
  build: [
    ["ocaml" "configure.ml" "--libdir" lib] {opam-version < "2"}
    ["ocaml" "bootstrap.ml"]
    ["./boot.exe" "--release" "--subst"] {pinned}
    ["./boot.exe" "--release" "-j" jobs]
  ]
  dev-repo: "git+https://github.com/ocaml/dune.git"
  url {
    src:
      "https://github.com/ocaml/dune/releases/download/1.6.2/dune-1.6.2.tbz"
    checksum: "md5=e628e3903d2418d410e058ca49938a5d"
  }
}
package "easy-format" {
  opam-version: "2.0"
  version: "1.3.1"
  synopsis:
    "High-level and functional interface to the Format module of the OCaml standard library"
  maintainer: "martin@mjambon.com"
  authors: "Martin Jambon"
  homepage: "http://mjambon.com/easy-format.html"
  bug-reports: "https://github.com/mjambon/easy-format/issues"
  depends: [
    "ocaml" {>= "4.02.3"}
    "jbuilder" {build}
  ]
  build: [
    ["jbuilder" "build" "-p" name "-j" jobs]
    ["jbuilder" "runtest" "-p" name] {with-test}
  ]
  dev-repo: "git+https://github.com/mjambon/easy-format.git"
  url {
    src: "https://github.com/mjambon/easy-format/archive/v1.3.1.tar.gz"
    checksum: "md5=4e163700fb88fdcd6b8976c3a216c8ea"
  }
}
package "jbuilder" {
  opam-version: "2.0"
  version: "transition"
  synopsis:
    "This is a transition package, jbuilder is now named dune. Use the dune"
  description: "package instead."
  maintainer: "opensource@janestreet.com"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml/dune"
  bug-reports: "https://github.com/ocaml/dune/issues"
  depends: ["ocaml" "dune"]
  post-messages:
    "Jbuilder has been renamed and the jbuilder package is now a transition package. Use the dune package instead."
  dev-repo: "git+https://github.com/ocaml/dune.git"
}
package "lambda-term" {
  opam-version: "2.0"
  version: "1.13"
  synopsis: "Terminal manipulation library for OCaml"
  description: """
Lambda-term is a cross-platform library for manipulating the terminal. It
provides an abstraction for keys, mouse events, colors, as well as a set of
widgets to write curses-like applications. The main objective of lambda-term is
to provide a higher level functional interface to terminal manipulation than,
for example, ncurses, by providing a native OCaml interface instead of bindings
to a C library. Lambda-term integrates with zed to provide text edition
facilities in console applications."""
  maintainer: "jeremie@dimino.org"
  authors: "Jérémie Dimino"
  license: "BSD3"
  homepage: "https://github.com/diml/lambda-term"
  bug-reports: "https://github.com/diml/lambda-term/issues"
  depends: [
    "ocaml" {>= "4.02.3"}
    "lwt" {>= "2.7.0"}
    "lwt_log"
    "react"
    "zed" {>= "1.2"}
    "camomile" {>= "0.8.6"}
    "lwt_react"
    "jbuilder" {build & >= "1.0+beta9"}
  ]
  build: [
    ["jbuilder" "subst" "-p" name] {pinned}
    ["jbuilder" "build" "-p" name "-j" jobs]
    ["jbuilder" "runtest" "-p" name "-j" jobs] {with-test}
  ]
  dev-repo: "git://github.com/diml/lambda-term.git"
  url {
    src:
      "https://github.com/diml/lambda-term/releases/download/1.13/lambda-term-1.13.tbz"
    checksum: "md5=c13826a97014d4d573b927b623c7e043"
  }
}
package "lwt" {
  opam-version: "2.0"
  version: "4.1.0"
  synopsis: "Promises, concurrency, and parallelized I/O"
  description: """
A promise is a value that may become determined in the future.

Lwt provides typed, composable promises. Promises that are resolved by I/O are
resolved by Lwt in parallel.

Meanwhile, OCaml code, including code creating and waiting on promises, runs in
a single thread by default. This reduces the need for locks or other
synchronization primitives. Code can be run in parallel on an opt-in basis."""
  maintainer: [
    "Anton Bachin <antonbachin@yahoo.com>"
    "Mauricio Fernandez <mfp@acm.org>"
    "Simon Cruanes <simon.cruanes.2007@m4x.org>"
  ]
  authors: ["Jérôme Vouillon" "Jérémie Dimino"]
  license: "LGPL with OpenSSL linking exception"
  homepage: "https://github.com/ocsigen/lwt"
  doc: "https://ocsigen.org/lwt/manual/"
  bug-reports: "https://github.com/ocsigen/lwt/issues"
  depends: [
    "ocaml" {>= "4.02.0"}
    "cppo" {build & >= "1.1.0"}
    "jbuilder" {build & >= "1.0+beta14"}
    "ocamlfind" {build & >= "1.7.3-1"}
    "result"
  ]
  depopts: ["base-threads" "base-unix" "conf-libev"]
  conflicts: [
    "ocaml-variants" {= "4.02.1+BER"}
  ]
  build: [
    ["ocaml" "src/util/configure.ml" "-use-libev" "%{conf-libev:installed}%"]
    ["jbuilder" "build" "-p" name "-j" jobs]
  ]
  messages: [
    "For the PPX, please install package lwt_ppx" {!lwt_ppx:installed}
    "For the Camlp4 syntax, please install package lwt_camlp4"
      {camlp4:installed & !lwt_camlp4:installed}
    "For Lwt_log and Lwt_daemon, please install package lwt_log"
      {!lwt_log:installed}
  ]
  dev-repo: "git+https://github.com/ocsigen/lwt.git"
  url {
    src: "https://github.com/ocsigen/lwt/archive/4.1.0.tar.gz"
    checksum: "md5=e919bee206f18b3d49250ecf9584fde7"
  }
}
package "lwt_log" {
  opam-version: "2.0"
  version: "1.1.0"
  synopsis: "Lwt logging library (deprecated)"
  maintainer: "Anton Bachin <antonbachin@yahoo.com>"
  authors: ["Shawn Wagner" "Jérémie Dimino"]
  license: "LGPL"
  homepage: "https://github.com/aantron/lwt_log"
  doc:
    "https://github.com/aantron/lwt_log/blob/master/src/core/lwt_log_core.mli"
  bug-reports: "https://github.com/aantron/lwt_log/issues"
  depends: [
    "ocaml"
    "jbuilder" {build & >= "1.0+beta10"}
    "lwt" {>= "4.0.0"}
  ]
  build: ["jbuilder" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://github.com/aantron/lwt_log.git"
  url {
    src: "https://github.com/aantron/lwt_log/archive/1.1.0.tar.gz"
    checksum: "md5=92142135d01a4d7e805990cc98653d55"
  }
}
package "lwt_react" {
  opam-version: "2.0"
  version: "1.1.1"
  synopsis: "Helpers for using React with Lwt"
  maintainer: [
    "Anton Bachin <antonbachin@yahoo.com>"
    "Mauricio Fernandez <mfp@acm.org>"
    "Simon Cruanes <simon.cruanes.2007@m4x.org>"
  ]
  authors: "Jérémie Dimino"
  license: "LGPL with OpenSSL linking exception"
  homepage: "https://github.com/ocsigen/lwt"
  doc: "https://ocsigen.org/lwt/api/Lwt_react"
  bug-reports: "https://github.com/ocsigen/lwt/issues"
  depends: [
    "ocaml"
    "jbuilder" {build & >= "1.0+beta14"}
    "lwt" {>= "3.0.0"}
    "react" {>= "1.0.0"}
  ]
  build: [
    ["jbuilder" "build" "-p" name "-j" jobs]
    ["jbuilder" "runtest" "-p" name] {with-test}
  ]
  dev-repo: "git+https://github.com/ocsigen/lwt.git"
  url {
    src: "https://github.com/ocsigen/lwt/archive/4.0.0.tar.gz"
    checksum: "md5=3bbde866884e32cc7a9d9cbd1e52bde3"
  }
}
package "merlin" {
  opam-version: "2.0"
  version: "3.2.2"
  synopsis: "Installation with Opam"
  description: """
If you have a working [Opam](https://opam.ocaml.org/) installation, Merlin is only two commands away:

```shell
opam install merlin
opam user-setup install
```

[opam-user-setup](https://github.com/OCamlPro/opam-user-setup) takes care of configuring Emacs and Vim to make best use of your current install.

You can also [configure the editor](#editor-setup) yourself, if you prefer."""
  maintainer: "defree@gmail.com"
  authors: "The Merlin team"
  homepage: "https://github.com/ocaml/merlin"
  bug-reports: "https://github.com/ocaml/merlin/issues"
  depends: [
    "ocaml" {>= "4.02.1" & < "4.08"}
    "dune" {build}
    "ocamlfind" {>= "1.5.2"}
    "yojson"
    "craml" {with-test}
  ]
  build: [
    ["dune" "subst"] {pinned}
    ["dune" "build" "-p" name "-j" jobs]
  ]
  post-messages:
    """
merlin installed.

Quick setup for VIM
-------------------
Append this to your .vimrc to add merlin to vim's runtime-path:
  let g:opamshare = substitute(system('opam config var share'),'\\n$','','''')
  execute "set rtp+=" . g:opamshare . "/merlin/vim"

Also run the following line in vim to index the documentation:
  :execute "helptags " . g:opamshare . "/merlin/vim/doc"

Quick setup for EMACS
-------------------
Add opam emacs directory to your load-path by appending this to your .emacs:
  (let ((opam-share (ignore-errors (car (process-lines "opam" "config" "var" "share")))))
   (when (and opam-share (file-directory-p opam-share))
    ;; Register Merlin
    (add-to-list 'load-path (expand-file-name "emacs/site-lisp" opam-share))
    (autoload 'merlin-mode "merlin" nil t nil)
    ;; Automatically start it in OCaml buffers
    (add-hook 'tuareg-mode-hook 'merlin-mode t)
    (add-hook 'caml-mode-hook 'merlin-mode t)
    ;; Use opam switch to lookup ocamlmerlin binary
    (setq merlin-command 'opam)))

Take a look at https://github.com/ocaml/merlin for more information

Quick setup with opam-user-setup
--------------------------------

Opam-user-setup support Merlin.

  $ opam user-setup install

should take care of basic setup.
See https://github.com/OCamlPro/opam-user-setup"""
      {success & !user-setup:installed}
  dev-repo: "git+https://github.com/ocaml/merlin.git"
  url {
    src:
      "https://github.com/ocaml/merlin/releases/download/v3.2.2/merlin-v3.2.2.tbz"
    checksum: "md5=ede35b65f8ac9c440cfade5445662c54"
  }
}
package "ocaml" {
  opam-version: "2.0"
  version: "4.06.1"
  synopsis: "The OCaml compiler (virtual package)"
  description: """
This package requires a matching implementation of OCaml,
and polls it to initialise specific variables like `ocaml:native-dynlink`"""
  maintainer: "platform@lists.ocaml.org"
  authors: [
    "Xavier Leroy"
    "Damien Doligez"
    "Alain Frisch"
    "Jacques Garrigue"
    "Didier Rémy"
    "Jérôme Vouillon"
  ]
  homepage: "https://ocaml.org"
  bug-reports: "https://caml.inria.fr/mantis/"
  depends: [
    "ocaml-config"
    "ocaml-base-compiler" {= "4.06.1"} |
    "ocaml-variants" {>= "4.06.1" & < "4.06.2~"} |
    "ocaml-system" {= "4.06.1"}
  ]
  setenv: [
    [CAML_LD_LIBRARY_PATH = "%{_:stubsdir}%"]
    [CAML_LD_LIBRARY_PATH += "%{lib}%/stublibs"]
    [OCAML_TOPLEVEL_PATH = "%{toplevel}%"]
  ]
  build: [
    "ocaml" "%{ocaml-config:share}%/gen_ocaml_config.ml" _:version _:name
  ]
  build-env: CAML_LD_LIBRARY_PATH = ""
}
package "ocaml-helloworld" {
  opam-version: "2.0"
  version: "0.0.1"
  synopsis: "OCaml version hello world program"
  description: "This is an OCaml version hello world program."
  maintainer: "ZHAO Jinxiang <xiaoxiangmoe@gmail.com>"
  authors: "ZHAO Jinxiang <xiaoxiangmoe@gmail.com>"
  license: "GPL"
  homepage: "https://github.com/xiaoxiangmoe/example"
  bug-reports: "https://github.com/xiaoxiangmoe/example"
  depends: [
    "ocaml"
    "dune" {build}
    "merlin" {dev}
    "ocp-indent" {dev}
    "utop" {dev}
  ]
  build: ["dune" "--help"]
  dev-repo: "git+https://github.com/xiaoxiangmoe/example"
  url {
    src: "git+file:///Users/zhaojinxiang/tech/ocaml-helloworld#master"
  }
}
package "ocamlbuild" {
  opam-version: "2.0"
  version: "0.12.0"
  synopsis:
    "OCamlbuild is a build system with builtin rules to easily build most OCaml projects."
  maintainer: "Gabriel Scherer <gabriel.scherer@gmail.com>"
  authors: ["Nicolas Pouillard" "Berke Durak"]
  license: "LGPL-2 with OCaml linking exception"
  homepage: "https://github.com/ocaml/ocamlbuild/"
  doc: "https://github.com/ocaml/ocamlbuild/blob/master/manual/manual.adoc"
  bug-reports: "https://github.com/ocaml/ocamlbuild/issues"
  depends: [
    "ocaml" {>= "4.03" & < "4.08.0"}
  ]
  conflicts: [
    "base-ocamlbuild"
    "ocamlfind" {< "1.6.2"}
  ]
  build: [
    [
      make
      "-f"
      "configure.make"
      "all"
      "OCAMLBUILD_PREFIX=%{prefix}%"
      "OCAMLBUILD_BINDIR=%{bin}%"
      "OCAMLBUILD_LIBDIR=%{lib}%"
      "OCAMLBUILD_MANDIR=%{man}%"
      "OCAML_NATIVE=%{ocaml:native}%"
      "OCAML_NATIVE_TOOLS=%{ocaml:native}%"
    ]
    [make "check-if-preinstalled" "all" "opam-install"]
  ]
  dev-repo: "git+https://github.com/ocaml/ocamlbuild.git"
  url {
    src: "https://github.com/ocaml/ocamlbuild/archive/0.12.0.tar.gz"
    checksum: "md5=442baa19470bd49150f153122e22907b"
  }
}
package "ocp-indent" {
  opam-version: "2.0"
  version: "1.7.0"
  synopsis: "A simple tool to indent OCaml programs"
  description: """
Ocp-indent is based on an approximate, tolerant OCaml parser and a simple stack
machine ; this is much faster and more reliable than using regexps. Presets and
configuration options available, with the possibility to set them project-wide.
Supports most common syntax extensions, and extensible for others.

Includes:
- An indentor program, callable from the command-line or from within editors
- Bindings for popular editors
- A library that can be directly used by editor writers, or just for
  fault-tolerant/approximate parsing."""
  maintainer: "contact@ocamlpro.com"
  authors: [
    "Louis Gesbert <louis.gesbert@ocamlpro.com>"
    "Thomas Gazagnaire <thomas@gazagnaire.org>"
    "Jun Furuse"
  ]
  license: "LGPL"
  tags: ["org:ocamlpro" "org:typerex"]
  homepage: "http://www.typerex.org/ocp-indent.html"
  bug-reports: "https://github.com/OCamlPro/ocp-indent/issues"
  depends: [
    "ocaml"
    "dune" {build}
    "cmdliner" {>= "1.0.0"}
    "ocamlfind"
    "base-bytes"
  ]
  build: ["dune" "build" "-p" name "-j" jobs]
  run-test: ["dune" "runtest" "-p" name]
  post-messages:
    """
This package requires additional configuration for use in editors. Install package 'user-setup', or manually:

* for Emacs, add these lines to ~/.emacs:
  (add-to-list 'load-path "%{share}%/emacs/site-lisp")
  (require 'ocp-indent)

* for Vim, add this line to ~/.vimrc:
  set rtp^="%{share}%/ocp-indent/vim\""""
      {success & !user-setup:installed}
  dev-repo: "git+https://github.com/OCamlPro/ocp-indent.git"
  url {
    src: "https://github.com/OCamlPro/ocp-indent/archive/1.7.0.tar.gz"
    checksum: [
      "md5=3bc327e38f453f38494098725c97d2cb"
      "sha512=5b28ae8695612c95cb0f5748de9b9f01d8ef4ad18b31340dc526ccae5fb1b6ee7e12024ff1beb817a43796183a83bca144222ca2d77d7750f2ff56108b5fa350"
    ]
  }
}
package "react" {
  opam-version: "2.0"
  version: "1.2.1"
  synopsis: "Declarative events and signals for OCaml"
  description: """
Release %%VERSION%%

React is an OCaml module for functional reactive programming (FRP). It
provides support to program with time varying values : declarative
events and signals. React doesn't define any primitive event or
signal, it lets the client chooses the concrete timeline.

React is made of a single, independent, module and distributed under
the ISC license."""
  maintainer: "Daniel Bünzli <daniel.buenzl i@erratique.ch>"
  authors: "Daniel Bünzli <daniel.buenzl i@erratique.ch>"
  license: "ISC"
  tags: ["reactive" "declarative" "signal" "event" "frp" "org:erratique"]
  homepage: "http://erratique.ch/software/react"
  doc: "http://erratique.ch/software/react/doc/React"
  bug-reports: "https://github.com/dbuenzli/react/issues"
  depends: [
    "ocaml" {>= "4.01.0"}
    "ocamlfind" {build}
    "ocamlbuild" {build}
    "topkg" {build & >= "0.9.0"}
  ]
  build: ["ocaml" "pkg/pkg.ml" "build" "--dev-pkg" "%{pinned}%"]
  dev-repo: "git+http://erratique.ch/repos/react.git"
  url {
    src: "http://erratique.ch/software/react/releases/react-1.2.1.tbz"
    checksum: "md5=ce1454438ce4e9d2931248d3abba1fcc"
  }
}
package "result" {
  opam-version: "2.0"
  version: "1.3"
  synopsis: "Compatibility Result module"
  description: """
Projects that want to use the new result type defined in OCaml >= 4.03
while staying compatible with older version of OCaml should use the
Result module defined in this library."""
  maintainer: "opensource@janestreet.com"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "BSD3"
  homepage: "https://github.com/janestreet/result"
  bug-reports: "https://github.com/janestreet/result/issues"
  depends: [
    "ocaml"
    "jbuilder" {build & >= "1.0+beta11"}
  ]
  build: ["jbuilder" "build" "-p" name "-j" jobs]
  dev-repo: "git+https://github.com/janestreet/result.git"
  url {
    src:
      "https://github.com/janestreet/result/releases/download/1.3/result-1.3.tbz"
    checksum: "md5=4beebefd41f7f899b6eeba7414e7ae01"
  }
}
package "topkg" {
  opam-version: "2.0"
  version: "1.0.0"
  synopsis: "The transitory OCaml software packager"
  description: """
Topkg is a packager for distributing OCaml software. It provides an
API to describe the files a package installs in a given build
configuration and to specify information about the package's
distribution, creation and publication procedures.

The optional topkg-care package provides the `topkg` command line tool
which helps with various aspects of a package's life cycle: creating
and linting a distribution, releasing it on the WWW, publish its
documentation, add it to the OCaml opam repository, etc.

Topkg is distributed under the ISC license and has **no**
dependencies. This is what your packages will need as a *build*
dependency.

Topkg-care is distributed under the ISC license it depends on
[fmt][fmt], [logs][logs], [bos][bos], [cmdliner][cmdliner],
[webbrowser][webbrowser] and `opam-format`.

[fmt]: http://erratique.ch/software/fmt
[logs]: http://erratique.ch/software/logs
[bos]: http://erratique.ch/software/bos
[cmdliner]: http://erratique.ch/software/cmdliner
[webbrowser]: http://erratique.ch/software/webbrowser"""
  maintainer: "Daniel Bünzli <daniel.buenzl i@erratique.ch>"
  authors: "Daniel Bünzli <daniel.buenzl i@erratique.ch>"
  license: "ISC"
  tags: ["packaging" "ocamlbuild" "org:erratique"]
  homepage: "http://erratique.ch/software/topkg"
  doc: "http://erratique.ch/software/topkg/doc"
  bug-reports: "https://github.com/dbuenzli/topkg/issues"
  depends: [
    "ocaml" {>= "4.01.0"}
    "ocamlfind" {build & >= "1.6.1"}
    "ocamlbuild"
    "result"
  ]
  build: [
    "ocaml" "pkg/pkg.ml" "build" "--pkg-name" name "--dev-pkg" "%{pinned}%"
  ]
  dev-repo: "git+http://erratique.ch/repos/topkg.git"
  url {
    src: "http://erratique.ch/software/topkg/releases/topkg-1.0.0.tbz"
    checksum: "md5=e3d76bda06bf68cb5853caf6627da603"
  }
}
package "utop" {
  opam-version: "2.0"
  version: "2.2.0"
  synopsis: "Universal toplevel for OCaml"
  description: """
utop is an improved toplevel (i.e., Read-Eval-Print Loop or REPL) for
OCaml.  It can run in a terminal or in Emacs. It supports line
edition, history, real-time and context sensitive completion, colors,
and more.  It integrates with the Tuareg mode in Emacs."""
  maintainer: "jeremie@dimino.org"
  authors: "Jérémie Dimino"
  license: "BSD3"
  homepage: "https://github.com/diml/utop"
  bug-reports: "https://github.com/diml/utop/issues"
  depends: [
    "ocaml" {>= "4.02.3"}
    "base-unix"
    "base-threads"
    "ocamlfind" {>= "1.7.2"}
    "lambda-term" {>= "1.2"}
    "lwt"
    "lwt_react"
    "camomile"
    "react" {>= "1.0.0"}
    "cppo" {build & >= "1.1.2"}
    "jbuilder" {build & >= "1.0+beta9"}
  ]
  build: [
    ["jbuilder" "subst" "-p" name] {pinned}
    ["jbuilder" "build" "-p" name "-j" jobs]
    ["jbuilder" "runtest" "-p" name "-j" jobs] {with-test}
  ]
  dev-repo: "git+https://github.com/diml/utop.git"
  url {
    src:
      "https://github.com/diml/utop/releases/download/2.2.0/utop-2.2.0.tbz"
    checksum: "md5=c8e4805883ce27a2ef27b0e4322d6f04"
  }
}
package "yojson" {
  opam-version: "2.0"
  version: "1.4.1"
  synopsis:
    "Yojson is an optimized parsing and printing library for the JSON format"
  description: """
It addresses a few shortcomings of json-wheel including 2x speedup,
polymorphic variants and optional syntax for tuples and variants.

ydump is a pretty-printing command-line program provided with the
yojson package.

The program atdgen can be used to derive OCaml-JSON serializers and
deserializers from type definitions."""
  maintainer: "martin@mjambon.com"
  authors: "Martin Jambon"
  homepage: "http://mjambon.com/yojson.html"
  bug-reports: "https://github.com/mjambon/yojson/issues"
  depends: [
    "ocaml" {>= "4.02.3"}
    "jbuilder" {build}
    "cppo" {build}
    "easy-format"
    "biniou" {>= "1.2.0"}
  ]
  build: [
    ["jbuilder" "build" "-p" name "-j" jobs]
    ["jbuilder" "runtest" "-p" name] {with-test}
  ]
  dev-repo: "git+https://github.com/mjambon/yojson.git"
  url {
    src: "https://github.com/mjambon/yojson/archive/v1.4.1.tar.gz"
    checksum: "md5=3ea6e36422dd670e8ab880710d5f7398"
  }
}
package "zed" {
  opam-version: "2.0"
  version: "1.6"
  synopsis: "Abstract engine for text edition in OCaml"
  description: """
Zed is an abstract engine for text edition. It can be used to write text
editors, edition widgets, readlines, ... Zed uses Camomile to fully support the
Unicode specification, and implements an UTF-8 encoded string type with
validation, and a rope datastructure to achieve efficient operations on large
Unicode buffers. Zed also features a regular expression search on ropes. To
support efficient text edition capabilities, Zed provides macro recording and
cursor management facilities."""
  maintainer: "opam-devel@lists.ocaml.org"
  authors: "Jérémie Dimino"
  license: "BSD3"
  homepage: "https://github.com/diml/zed"
  bug-reports: "https://github.com/diml/zed/issues"
  depends: [
    "ocaml" {>= "4.02.3"}
    "jbuilder" {build & >= "1.0+beta9"}
    "base-bytes"
    "camomile" {>= "0.8"}
    "react"
  ]
  build: [
    ["jbuilder" "subst" "-p" name] {pinned}
    ["jbuilder" "build" "-p" name "-j" jobs]
    ["jbuilder" "runtest" "-p" name "-j" jobs] {with-test}
  ]
  dev-repo: "git://github.com/diml/zed.git"
  url {
    src: "https://github.com/diml/zed/releases/download/1.6/zed-1.6.tbz"
    checksum: "md5=f75c3094af1a22f9801d5ca5eb2d40e0"
  }
}
